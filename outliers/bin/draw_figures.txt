# Plot figures



################# 
###  Figure 3 ###
#################

#### Panel A
load("summary.deg.Rdata")

fcc = c(7:9,12,11,10)
all = unique(array(sapply(fcc, function(i) head(order(genesets.fcranks[,i]), n=100 ))  ))
freq = count(array(sapply(fcc, function(i) head(order(genesets.fcranks[,i]), n=100 ))  ))
m = match( all, freq[,1])
om = order(-freq[m,2])
down.plot = genesets.fcranks[all,fcc][om,]/dim(genesets.fcranks)[1]
down.bar = freq[m,2][om]

freq = count(array(sapply(fcc, function(i) tail(order(genesets.fcranks[,i]), n=100 ))  ))
all = unique(array(sapply(fcc, function(i) tail(order(genesets.fcranks[,i]), n=100 ))  ))
m = match( all, freq[,1])
om = order(-freq[m,2])
up.plot = 1- (genesets.fcranks[all,fcc][om,]/dim(genesets.fcranks)[1])
up.bar = freq[m,2][om]

leg2 = cbind(rev(magma(6)), 1:6)

pdf("fig3.panelA.gene.recur.pdf")
heatmap.3(up.plot, Colv=F, col=rev(viridis(100)), Rowv=F, RowSideCol=rev(magma(6))[up.bar])
heatmap.3(down.plot, Colv=F, col=rev(viridis(100)), Rowv=F, RowSideCol=rev(magma(6))[down.bar])
leg2 = cbind(rev(magma(6)), 1:6)
plot(0,1)
legend( "bottom", leg=leg2[,2], col=leg2[,1], lwd=3 )
dev.off()

save( up.plot, down.plot, up.bar, down.bar, leg2, file="fig3.panelA.Rdata")



#### Panel B
load("summary.deg.Rdata")
load("taf1.DE.Rdata")
reorder = c(1:3,6,5,4)
down100overlaps = sapply(reorder, function(i) sapply(reorder, function(j) length(intersect(which(genes.down[,i]>0), which(genes.down[,j]>0) )) ) )
up100overlaps = sapply(reorder, function(i) sapply(reorder, function(j)  length(intersect(which(genes.up[,i]>0), which(genes.up[,j]>0) )) ) )

up100overlaps.pvals = up100overlaps * 0
down100overlaps.pvals = down100overlaps * 0

for(i in 1:6){
	for(j in 1:6){

		q = up100overlaps[i,j] - 1
		m = 100
		n = dim(genesets.fcranks)[1] - m
		k = 100
		up100overlaps.pvals[i,j] = phyper(q, m, n , k, lower.tail = FALSE, log.p = FALSE)

		q = down100overlaps[i,j] -1
		m = 100
		n = dim(genesets.fcranks)[1] - m
		k = 100
		down100overlaps.pvals[i,j] = phyper(q, m, n , k, lower.tail = FALSE, log.p = FALSE)
	}
}

bot = row(down100overlaps.pvals) > col( down100overlaps.pvals )
top  = row(down100overlaps.pvals) <  col( down100overlaps.pvals )
mat.down = -log10(down100overlaps.pvals)
mat.up = -log10(up100overlaps.pvals)
mat.comb = mat.down * 0
mat.comb[bot] =  -log10(p.adjust(down100overlaps.pvals[bot]))
mat.comb[top] =  -log10(p.adjust(up100overlaps.pvals[top]))
count.comb =  up100overlaps
count.comb[bot] = down100overlaps[bot]
diag(count.comb) = ""
sigtemp = (mat.comb > -log10(0.05) ) * 1
sigtemp[sigtemp==1] = "*"
sigtemp[sigtemp==0] = ""
sigtemp2 = matrix(paste(count.comb, sigtemp), ncol=6 )


pdf("fig3.panelB.common.overlaps.pdf")
heatmap.3(mat.comb, col=cols, Rowv=F, Colv=F, cellnote=sigtemp2, notecol="black", notecex=2 )
dev.off()

save(mat.comb, sigtemp2, file="fig3.panelB.Rdata")

#### Panel C
load("analysis/fdr_calcs.genes.up.Rdata")
fdrs.up = fdrs
load("analysis/fdr_calcs.genes.down.Rdata")
fdrs.down= fdrs
load("taf1.DE.Rdata")
recur.d = rowSums(genes.down)
recur.u = rowSums(genes.up)
cols.rec  =c(magma(5)[2], "deeppink4", "darkcyan" )


pdf("fig3.panelC.hist.pdf")
hist( recur.u[recur.u>0]+0.01 ,    col=cols.rec[2], main="Recurrence, up", xlab="Count",xlim=c(1,4))
abline( v = fdrs.up$Pt)
hist( recur.d[recur.d>0]+0.01 ,    col=cols.rec[3], main="Recurrence, down", xlab="Count",xlim=c(1,4))
abline( v = fdrs.down$Pt)
dev.off()

save( recur.u ,recur.d, fdrs.down, fdrs.up, file="fig3.panelC.Rdata")


#### Panel D
*** TO DO

#################
###  Figure 4 ###
#################
#### Panel A
load("analysis/fdr_calcs.goslim.paths.all.Rdata")
load("analysis/summary.goslim.paths.Rdata")
load("analysis/summary.goslim.paths.recurs.Rdata")
load("analysis/goslim.summary2genes.Rdata")
pdf("fig4.panelA.pdf")
dev.off()

save(up.path, down.path, file="fig4.panelA.Rdata")
#### Panel B
pdf("fig4.panelB.pdf")
dev.off()
save(recur.up.path,  fdrs.up , file="fig4.panelA.Rdata")

#### Panel C
pdf("fig4.panelC.pdf")
dev.off()
save(recur.up.path,  fdrs.up , file="fig4.panelC.Rdata")

#### Panel D
pdf("fig4.panelD.pdf")
dev.off()
save( file="fig4.panelD.Rdata")

#### Panel E
pdf("fig4.panelD.pdf")
dev.off()
save( , file="fig4.panelE.Rdata")


#################
###  Figure 5 ###
#################

#### Panel A
load("1adj.tally_75.subnet.down1000.Rdata")
n.coexp = subnet[1:100,1:100]
medK = 0.28
filtMin=6
temp = n.coexp
temp[temp >medK] = 1
temp[temp <= medK] = 0
consTree = hclust(as.dist(temp), method = "average");
consDend = as.dendrogram(consTree)
unmergedLabels3 = cutreeDynamic(dendro = consTree, distM = temp, deepSplit = 2, cutHeight = 0.995, minClusterSize = 2, pamRespectsDendro = FALSE );
nsclust = as.numeric(unmergedLabels3)+1
unmergedColors3 = magma( max(nsclust))[nsclust]
n.coexp = 1-n.coexp

pdf("fig5.panelA.heatmap.f1.pdf")
heatmap.2(n.coexp, col=viridis(100), density="none", trace="none", Rowv=consDend, Colv=consDend, RowSideColors=unmergedColors3, ColSideColors=unmergedColors3,cexRow=0.5, cexCol=0.5, main="Downregulated genes")
dev.off()
save(n.coexp, consDend, unmergedColors3 , file="fig5.panelA.Rdata")

#### Panel B
load("analysis/taf.recur.filt.up.genes.Rdata")
load("analysis/taf.recur.filt.down.genes.Rdata")
recurs = cbind( recur.u*0, recur.u*0, recur.u, recur.u.filt, recur.d , recur.d.filt)
load("analysis/fdr_calcs.filt.genes.down.Rdata")
load("analysis/fdr_calcs.filt.genes.up.Rdata")
fdrs.up.filt = fdrs.up
fdrs.down.filt = fdrs.down
load("fdr_calcs.genes.down.Rdata")
load("fdr_calcs.genes.up.Rdata")
pt.all = cbind(0,0, fdrs.up$Pt,fdrs.up.filt$Pt , fdrs.down$Pt, fdrs.down.filt$Pt)



temp1 = recurs[,c(4,3)]
temp = plyr::count( temp1)
temp.mat = spread(temp, key=x.recur.u.filt, value=freq)
rownames(temp.mat) = temp.mat[,1]
temp.mat = temp.mat[,-1]
temp.mat[is.na(temp.mat)] = 0
temp.mat = as.matrix(temp.mat )

temp.mat10 =   log10(temp.mat )  + 1
temp.mat10[!is.finite(temp.mat10)] = 0
Pt.pre = pt.all[3]
Pt.post = pt.all[4]


pdf("fig5.panelB.up.pdf")
image(  temp.mat10, col=cols11, axes=F, xlab="Recurrence pre-filtering", ylab="Recurrence post-filtering" )
n=dim( temp.mat)[2] -1
ni = diff((0:n/n))[1]
abline( h= (0:n/n)[Pt.post]+ni/2, lwd=3, col="grey")
axis(2, at=0:n/n, lab=0:n)
n=dim( temp.mat)[1] -1
ni = diff((0:n/n))[1]
axis(1, at=0:n/n, lab=(0:n)  )
abline( v= (0:n/n)[Pt.pre]+ni/2, lwd=3, col="grey")
heatmap.3(temp.mat10, col=cols11)
dev.off()


temp1 = recurs[,c(6,5)]
temp = plyr::count( temp1)
temp.mat = spread(temp, key=x.recur.d.filt, value=freq)
rownames(temp.mat) = temp.mat[,1]
temp.mat = temp.mat[,-1]
temp.mat[is.na(temp.mat)] = 0
temp.mat = as.matrix(temp.mat )

temp.mat10 =   log10(temp.mat )  + 1
temp.mat10[!is.finite(temp.mat10)] = 0
Pt.pre = pt.all[5]
Pt.post = pt.all[6]

pdf("fig5.panelB.down.pdf")
image(  temp.mat10, col=cols11, axes=F, xlab="Recurrence pre-filtering", ylab="Recurrence post-filtering" )
n=dim( temp.mat)[2] -1
ni = diff((0:n/n))[1]
abline( h= (0:n/n)[Pt.post]+ni/2, lwd=3, col="grey")
axis(2, at=0:n/n, lab=0:n)
n=dim( temp.mat)[1] -1
ni = diff((0:n/n))[1]
axis(1, at=0:n/n, lab=(0:n)  )
abline( v= (0:n/n)[Pt.pre]+ni/2, lwd=3, col="grey")
heatmap.3(temp.mat10, col=cols11)
dev.off()


#### Panel C

 

#################
###  Figure 6 ###
#################
#### Panel A

#### Panel B

#### Panel C

 
# for each disease: 
temp1 = recurs[,c(4,3)]
temp = plyr::count( temp1)
temp.mat = spread(temp, key=x.recur.u.filt, value=freq)
rownames(temp.mat) = temp.mat[,1]
temp.mat = temp.mat[,-1]
temp.mat[is.na(temp.mat)] = 0
temp.mat = as.matrix(temp.mat )

temp.mat10 =   log10(temp.mat )  + 1
temp.mat10[!is.finite(temp.mat10)] = 0
Pt.pre = pt.all[3]
Pt.post = pt.all[4]


pdf("pre.post.filter.recur.up.pdf")
image(  temp.mat10, col=cols11, axes=F, xlab="Recurrence pre-filtering", ylab="Recurrence post-filtering" )
n=dim( temp.mat)[2] -1
ni = diff((0:n/n))[1]
abline( h= (0:n/n)[Pt.post]+ni/2, lwd=3, col="grey")
axis(2, at=0:n/n, lab=0:n)
n=dim( temp.mat)[1] -1
ni = diff((0:n/n))[1]
axis(1, at=0:n/n, lab=(0:n)  )
abline( v= (0:n/n)[Pt.pre]+ni/2, lwd=3, col="grey")
heatmap.3(temp.mat10, col=cols11)
dev.off()


temp1 = recurs[,c(6,5)]
temp = plyr::count( temp1)
temp.mat = spread(temp, key=x.recur.d.filt, value=freq)
rownames(temp.mat) = temp.mat[,1]
temp.mat = temp.mat[,-1]
temp.mat[is.na(temp.mat)] = 0
temp.mat = as.matrix(temp.mat )

temp.mat10 =   log10(temp.mat )  + 1
temp.mat10[!is.finite(temp.mat10)] = 0
Pt.pre = pt.all[5]
Pt.post = pt.all[6]

pdf("pre.post.filter.recur.down.pdf")
image(  temp.mat10, col=cols11, axes=F, xlab="Recurrence pre-filtering", ylab="Recurrence post-filtering" )
n=dim( temp.mat)[2] -1
ni = diff((0:n/n))[1]
abline( h= (0:n/n)[Pt.post]+ni/2, lwd=3, col="grey")
axis(2, at=0:n/n, lab=0:n)
n=dim( temp.mat)[1] -1
ni = diff((0:n/n))[1]
axis(1, at=0:n/n, lab=(0:n)  )
abline( v= (0:n/n)[Pt.pre]+ni/2, lwd=3, col="grey")
heatmap.3(temp.mat10, col=cols11)

dev.off()

 
